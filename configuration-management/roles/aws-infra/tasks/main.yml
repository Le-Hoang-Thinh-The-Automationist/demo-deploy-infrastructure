---
- name: Ensure Terraform is installed
  ansible.builtin.command: terraform --version
  register: terraform_check
  changed_when: false
  failed_when: terraform_check.rc != 0

- name: Initialize Terraform
  ansible.builtin.command: terraform init -upgrade
  args:
    chdir: "{{ terraform_directory }}"

- name: Refresh Terraform State to check for the drift
  ansible.builtin.command: terraform refresh
  args:
    chdir: "{{ terraform_directory }}"

# # This step should be disabled
# - name: Destroy Terraform before apply the new
#   ansible.builtin.command: terraform destroy -auto-approve
#   args:
#     chdir: "{{ terraform_directory }}"

- name: Apply Terraform
  ansible.builtin.command: terraform apply -auto-approve
  args:
    chdir: "{{ terraform_directory }}"

- name: Read Terraform's Output
  ansible.builtin.shell: terraform output -json | jq -r '.public_ip_ec2.value'
  args:
    chdir: "{{ terraform_directory }}"
  register: terraform_output

- name: Extract the EC2's public IP for minikube configuration
  command: "python3 {{ role_path }}/script/extract_output.py \"{{ terraform_output.stdout }}\""